{"version":3,"sources":["Units/index.module.sass","Units/Search/index.module.sass","Units/UserAvatar/index.module.sass","services/httpService.js","services/authService.js","App/ProtectedRoute.jsx","Login/Input.jsx","Login/Form.jsx","MarsCircleHeader/index.jsx","Login/index.jsx","Units/ModalComp/index.jsx","Units/Rating.jsx","Units/ModalContent/services.js","Units/utils.js","Units/ModalContent/index.jsx","Units/Search/index.jsx","Units/UserAvatar/index.jsx","Units/index.jsx","Units/services.js","App/index.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","Promise","reject","get","post","login","email","password","a","http","data","localStorage","setItem","token","accessToken","user","name","picture","isUserLoggedIn","jwt","getItem","jwtDecode","getJwt","getHeaders","headers","Authorization","getUserImg","getUserName","ProtectedRoute","path","Component","component","render","rest","props","to","pathname","state","from","location","success","boxShadow","Input","label","value","onChange","className","style","type","id","placeholder","Form","errors","validate","result","Joi","schema","abortEarly","details","item","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","newErrors","errorMessage","newData","this","disabled","MarsCircleHeader","background","color","Login","string","minDomainAtoms","required","regex","history","push","noValidate","onSubmit","renderInput","renderButton","ModalComp","modal","toggle","children","Modal","isOpen","size","ModalBody","Rating","stars","count","color1","color2","getUnit","euro2Bitcoin","price","toFixed","ModalContent","unit","amenities","availability","createMarkup","html","__html","findBiggestImg","picturesArray","find","element","includes","match","params","pictures","src","alt","region","width","rating","dangerouslySetInnerHTML","description","join","map","year","key","marginBottom","withRouter","Search","onSearch","itemsDisplayed","searchBar","items","UserAvatar","image","height","avatarName","Units","units","searchQuery","userImg","userName","prevState","addIdToUrl","handleClick","handleSearch","filteredUnits","filter","toLowerCase","length","cancellation","clickableCard","role","tabIndex","onKeyPress","onClick","cardStyle","cardBodyStyle","substring","App","exact","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.020b3fd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardStyle\":\"Units_cardStyle__2WoeV\",\"cardBodyStyle\":\"Units_cardBodyStyle__2cScP\",\"clickableCard\":\"Units_clickableCard__2CUBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Search_items__2PMVV\",\"searchBar\":\"Search_searchBar__2aTcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarName\":\"UserAvatar_avatarName__170d0\"};","import axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (!expectedError) {\n        console.log('Logging the error ', error);\n    }\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post\n};\n","import jwtDecode from 'jwt-decode';\nimport http from './httpService';\n\nconst apiEndpoint = '/auth/login';\nconst tokenKey = 'token';\nconst userImg = 'userImg';\nconst userName = 'userName';\n\nexport const login = async (email, password) => {\n    const { data } = await http.post(apiEndpoint, {\n        email,\n        password\n    });\n    localStorage.setItem(tokenKey, data.token.accessToken);\n    localStorage.setItem(userName, data.user.name);\n    localStorage.setItem(userImg, data.user.picture);\n};\n\nexport const isUserLoggedIn = () => {\n    const jwt = localStorage.getItem(tokenKey);\n\n    // if jwt is null stop => anonymous user\n    if (!jwt) return null;\n\n    return jwtDecode(jwt);\n};\n\nexport const getJwt = () => localStorage.getItem(tokenKey);\n\nexport const getHeaders = () => ({\n    headers: {\n        Authorization: `bearer ${getJwt()}`\n    }\n});\n\nexport const getUserImg = () => localStorage.getItem(userImg);\n\nexport const getUserName = () => localStorage.getItem(userName);\n\nexport default {\n    login,\n    isUserLoggedIn,\n    getJwt,\n    getHeaders,\n    getUserImg,\n    getUserName\n};\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isUserLoggedIn } from '../services/authService';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                if (!isUserLoggedIn())\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                // eslint-disable-next-line react/prop-types\n                                state: { from: props.location }\n                            }}\n                        />\n                    );\n                return Component ? <Component {...props} /> : render(props);\n            }}\n        />\n    );\n};\n\nProtectedRoute.propTypes = {\n    path: PropTypes.string.isRequired,\n    component: PropTypes.func.isRequired,\n    render: PropTypes.func\n};\n\nexport default ProtectedRoute;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst success = { boxShadow: '0 0 5px 1px green' };\n\nconst Input = ({ name, label, value, error, onChange }) => {\n    return (\n        <div className=\"form-group\">\n            <input\n                style={\n                    !error && name === 'email' && value !== '' ? success : null\n                }\n                value={value}\n                onChange={onChange}\n                type={name === 'email' ? 'text' : 'password'}\n                className=\"form-control\"\n                id={name}\n                name={name}\n                placeholder={label}\n            />\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    );\n};\n\nInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './Input';\n\nclass Form extends Component {\n    state = {\n        data: {},\n        errors: []\n    };\n\n    validate = () => {\n        const { data } = this.state;\n        const result = Joi.validate(data, this.schema, {\n            abortEarly: false\n        });\n\n        if (!result.error) return null;\n\n        const errors = {};\n        // eslint-disable-next-line no-restricted-syntax\n        for (const item of result.error.details) {\n            errors[item.path[0]] = item.message;\n        }\n        return errors;\n    };\n\n    validateProperty = ({ name, value }) => {\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj, schema);\n        return error ? error.details[0].message : null;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        // errors should not be null\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n\n        this.doSubmit();\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        const { errors, data } = this.state;\n        const newErrors = { ...errors };\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) newErrors[input.name] = errorMessage;\n        else delete newErrors[input.name];\n\n        const newData = { ...data };\n        newData[input.name] = input.value;\n        this.setState({ data: newData, errors: newErrors });\n    };\n\n    renderInput(name, label) {\n        const { data, errors } = this.state;\n        return (\n            <Input\n                name={name}\n                label={label}\n                value={data[name]}\n                error={errors[name]}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    renderButton(label) {\n        return (\n            <button\n                disabled={this.validate()}\n                type=\"submit\"\n                className=\"btn btn-secondary\">\n                {label}\n            </button>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.sass';\n\nconst MarsCircleHeader = ({ background, color }) => {\n    const style = {\n        background,\n        color\n    };\n    return (\n        <b>\n            Blueground on&nbsp;\n            <span className=\"circle\" style={style}>\n                Mars\n            </span>\n        </b>\n    );\n};\n\nMarsCircleHeader.propTypes = {\n    background: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default MarsCircleHeader;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Joi from 'joi-browser';\nimport Form from './Form';\nimport { login, isUserLoggedIn } from '../services/authService';\nimport MarsCircleHeader from '../MarsCircleHeader';\nimport './index.sass';\n\nclass Login extends Form {\n    state = {\n        data: {\n            email: '',\n            password: ''\n        },\n        errors: {}\n    };\n\n    schema = {\n        email: Joi.string()\n            .email({ minDomainAtoms: 2 })\n            .required()\n            .regex(/^[\\w-]{2,8}@.*$/, '2-8 min chars before @')\n            .regex(/(?:(?:19|20)[0-9]{2})/, 'year of birth in 4 digits')\n            .regex(\n                /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                '2 letter country code after .'\n            )\n            .label('Email'),\n        password: Joi.string()\n            .required()\n            .label('Password')\n    };\n\n    doSubmit = async () => {\n        try {\n            const { data } = this.state;\n            await login(data.email, data.password);\n            // land to units view if successful\n            const { history } = this.props;\n            history.push('/units');\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const { errors } = this.state;\n                const newErrors = { ...errors };\n                newErrors.email = ex.response.data;\n                this.setState({ errors: newErrors });\n            }\n        }\n    };\n\n    render() {\n        // if user is logged in & tries to hit / on browser redirect him to /units\n        if (isUserLoggedIn()) return <Redirect to=\"/units\" />;\n\n        return (\n            <div className=\"container authenticate-container\">\n                <form\n                    className=\"form-authenticate\"\n                    noValidate\n                    onSubmit={this.handleSubmit}>\n                    <div className=\"card rounded-0\">\n                        <div className=\"card-body\">\n                            <div className=\"mb-4\">\n                                <MarsCircleHeader\n                                    background=\"black\"\n                                    color=\"white\"\n                                />\n                            </div>\n                            {this.renderInput('email', 'Email')}\n                            {this.renderInput('password', 'Password')}\n                            <div className=\"float-right\">\n                                {this.renderButton('Login')}\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './index.sass';\n\nconst ModalComp = ({ modal, toggle, children }) => {\n    return (\n        <Modal isOpen={modal} toggle={toggle} size=\"lg\">\n            <ModalBody>{children}</ModalBody>\n        </Modal>\n    );\n};\n\nModalComp.propTypes = {\n    modal: PropTypes.bool.isRequired,\n    toggle: PropTypes.func.isRequired,\n    children: PropTypes.element.isRequired\n};\n\nexport default ModalComp;\n","import React from 'react';\nimport ReactStars from 'react-stars';\nimport PropTypes from 'prop-types';\n\nconst Rating = ({ stars }) => {\n    return (\n        <ReactStars\n            count={5}\n            value={stars}\n            size={24}\n            color1=\"#DCDCDC\"\n            color2=\"#000000\"\n        />\n    );\n};\n\nRating.propTypes = {\n    // eslint-disable-next-line react/require-default-props\n    stars: PropTypes.number\n};\n\nexport default Rating;\n","import http from '../../services/httpService';\nimport { getHeaders } from '../../services/authService';\n\nconst apiEndpoint = '/units';\n\n/**\n *\n * @param {string} id\n */\n\nexport const getUnit = id => http.get(`${apiEndpoint}/${id}`, getHeaders());\n","/**\n *\n * @param {integer} price\n * @returns {string}\n */\n\nexport const euro2Bitcoin = price => `${(price / 5600).toFixed(2)} BTC`;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport Rating from '../Rating';\nimport { getUnit } from './services';\nimport { euro2Bitcoin } from '../utils';\nimport './index.sass';\n\nconst imgUrlPrefix = process.env.REACT_APP_IMG_URL_PREFIX;\n\nclass ModalContent extends Component {\n    state = {\n        unit: {},\n        amenities: [],\n        availability: []\n    };\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            }\n        } = this.props;\n        const { data: unit } = await getUnit(id);\n        const { amenities, availability } = unit;\n        this.setState({ unit, amenities, availability });\n    }\n\n    createMarkup = html => {\n        return { __html: `<i>Description</i>: ${html}` };\n    };\n\n    findBiggestImg = picturesArray => {\n        return picturesArray.find(element => element.includes('w800'));\n    };\n\n    render() {\n        const { unit, amenities, availability } = this.state;\n\n        return (\n            <>\n                <div className=\"row\" id=\"modalImage\">\n                    {unit && unit.pictures && (\n                        <img\n                            src={`${imgUrlPrefix}/${this.findBiggestImg(\n                                unit.pictures\n                            )}`}\n                            alt={`${imgUrlPrefix}/${this.findBiggestImg(\n                                unit.pictures\n                            )}`}\n                        />\n                    )}\n                </div>\n\n                <div id=\"nameRegion\" className=\"d-flex justify-content-between\">\n                    <div>\n                        <b> {`${unit.name} -${unit.region}`}</b>\n                    </div>\n                    <div>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary special-btn\"\n                            style={{ width: '100px' }}>\n                            <b>{euro2Bitcoin(unit.price)}</b>\n                        </button>\n                    </div>\n                </div>\n\n                <Rating stars={unit.rating} />\n\n                <div\n                    id=\"description\"\n                    // eslint-disable-next-line react/no-danger\n                    dangerouslySetInnerHTML={this.createMarkup(\n                        unit.description\n                    )}\n                />\n\n                <div id=\"amenities\">\n                    <b>Amenities: </b>\n                    {amenities.join(', ')}\n                </div>\n\n                <div className=\"row\">\n                    {availability.map(year => {\n                        return (\n                            <div\n                                className=\"col-12 col-sm-3 col-md-3\"\n                                key={year}>\n                                <button\n                                    className=\"btn btn-light btn-block special-btn\"\n                                    type=\"button\"\n                                    style={{ marginBottom: '8px' }}>\n                                    {year}\n                                </button>\n                            </div>\n                        );\n                    })}\n                </div>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-dark book-btn float-right\">\n                    Book\n                </button>\n            </>\n        );\n    }\n}\n\nModalContent.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            id: PropTypes.string.isRequired\n        })\n    }).isRequired\n};\n\nexport default withRouter(ModalContent);\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { items, searchBar } from './index.module.sass';\n\nconst Search = ({ value, onSearch, itemsDisplayed }) => {\n    return (\n        <div className={`input-group col-md-4 mb-4 ${searchBar}`}>\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text fa fa-search py-2\" />\n            </div>\n            <input\n                type=\"text\"\n                value={value}\n                className=\"form-control\"\n                placeholder=\"Search...\"\n                onChange={onSearch}\n            />\n            <div className={items}>{`${itemsDisplayed} items`}</div>\n        </div>\n    );\n};\n\nSearch.propTypes = {\n    value: PropTypes.string,\n    onSearch: PropTypes.func,\n    itemsDisplayed: PropTypes.number\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { avatarName } from './index.module.sass';\n\nconst UserAvatar = ({ image, name }) => {\n    return (\n        <div className=\"media\">\n            <img\n                width=\"32\"\n                height=\"32\"\n                src={image}\n                className=\"mr-2\"\n                alt={image}\n            />\n            <div className={`media-body ${avatarName}`}>{name}</div>\n        </div>\n    );\n};\n\nUserAvatar.propTypes = {\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n};\n\nexport default UserAvatar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport MarsCircleHeader from '../MarsCircleHeader';\nimport ModalComp from './ModalComp';\nimport ModalContent from './ModalContent';\nimport Rating from './Rating';\nimport Search from './Search';\nimport UserAvatar from './UserAvatar';\nimport { getUnits } from './services';\nimport { euro2Bitcoin } from './utils';\nimport { getUserImg, getUserName } from '../services/authService';\nimport { cardStyle, cardBodyStyle, clickableCard } from './index.module.sass';\n\nconst imgUrlPrefix = process.env.REACT_APP_IMG_URL_PREFIX;\n\nclass Units extends Component {\n    state = {\n        units: [],\n        modal: false,\n        searchQuery: '',\n        userImg: '',\n        userName: ''\n    };\n\n    async componentDidMount() {\n        const { data: units } = await getUnits();\n        const userImg = getUserImg();\n        const userName = getUserName();\n        this.setState({ units: units.data, userImg, userName });\n    }\n\n    toggle = () => {\n        this.setState(prevState => ({ modal: !prevState.modal }));\n    };\n\n    addIdToUrl = id => {\n        const { history } = this.props;\n        history.push(`/units/${id}`);\n    };\n\n    handleClick = id => {\n        this.toggle();\n        this.addIdToUrl(id);\n    };\n\n    handleSearch = ({ currentTarget: input }) => {\n        const searchQuery = input.value;\n        this.setState({ searchQuery });\n    };\n\n    render() {\n        const { userImg, userName, searchQuery, modal, units } = this.state;\n        const filteredUnits = units.filter(\n            unit =>\n                unit.name.toLowerCase().includes(searchQuery) ||\n                unit.region.toLowerCase().includes(searchQuery)\n        );\n\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-flex justify-content-between mt-2 mb-4\">\n                    <MarsCircleHeader background=\"white\" color=\"black\" />\n                    <UserAvatar image={userImg} name={userName} />\n                </div>\n\n                <Search\n                    value={searchQuery}\n                    onSearch={this.handleSearch}\n                    itemsDisplayed={filteredUnits.length}\n                />\n\n                <div className=\"row mt-2\">\n                    <ModalComp modal={modal} toggle={this.toggle}>\n                        <ModalContent />\n                    </ModalComp>\n                    {filteredUnits.map(\n                        ({\n                            id,\n                            pictures,\n                            name,\n                            region,\n                            description,\n                            cancellation,\n                            price,\n                            rating\n                        }) => {\n                            return (\n                                <div\n                                    className={`col-md-4 ${clickableCard}`}\n                                    key={id}>\n                                    <span\n                                        role=\"button\"\n                                        tabIndex=\"-1\"\n                                        onKeyPress={() => {}}\n                                        onClick={() => this.handleClick(id)}>\n                                        <div\n                                            className={`card mb-4 box-shadow ${cardStyle}`}>\n                                            <img\n                                                className=\"card-img-top\"\n                                                src={`${imgUrlPrefix}/${pictures[1]}`}\n                                                alt={`${imgUrlPrefix}/${pictures[1]}`}\n                                            />\n                                            <div\n                                                className={`card-body ${cardBodyStyle}`}>\n                                                <b>{name}</b>\n                                                <div>{region}</div>\n                                                <div className=\"card-text\">\n                                                    {`${description.substring(\n                                                        0,\n                                                        60\n                                                    )}...`}\n                                                </div>\n                                                <div>{cancellation}</div>\n                                                <Rating stars={rating} />\n                                                <div className=\"card-text\">\n                                                    <b>{euro2Bitcoin(price)}</b>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </span>\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nUnits.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func\n    }).isRequired\n};\n\nexport default withRouter(Units);\n","import http from '../services/httpService';\nimport { getHeaders } from '../services/authService';\n\nconst apiEndpoint = '/units';\n\nexport const getUnits = () => http.get(apiEndpoint, getHeaders());\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from '../Login';\nimport Units from '../Units';\n\nconst App = () => {\n    return (\n        <Switch>\n            <ProtectedRoute path=\"/units/:id\" component={Units} />\n            <ProtectedRoute path=\"/units\" component={Units} />\n            <Route path=\"/login\" component={Login} />\n            <Redirect from=\"/\" exact to=\"/login\" />\n        </Switch>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.sass';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}